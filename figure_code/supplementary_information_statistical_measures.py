import shelve
from matplotlib.colors import TwoSlopeNorm
import matplotlib.pyplot as plt
import matplotlib.ticker as tkr
from matplotlib.colors import CenteredNorm
from matplotlib.gridspec import GridSpec
import numpy as np
import scipy

g=shelve.open('../library_300_with_sense_2','r')
psim=g['downsample_1.0'].todense()
moments = np.zeros((psim.shape[0], 3))
m1=np.sum(np.arange(psim.shape[1])[None, :] * psim, axis=1)
moments[:,0]=m1
moments[:, 1] = np.sum(((np.arange(psim.shape[1])[None,:] - m1[:,None]) ** 2) * psim, axis=1)
moments[:, 2] = np.sum(((np.arange(psim.shape[1])[None,:] -m1[:,None]) ** 3) * psim,axis=1)
m3=moments[:,2].reshape(60,60,60)
S_single_value=np.min(g['S_single_value'],axis=1).reshape(60,60,60)
#CI=scipy.io.loadmat('self_infer_results_all.mat')['1.0']['CI'][0][0][:,-1,:,-1]
#CI=(CI-np.min(CI,axis=0)[np.newaxis,:])/(np.max(CI,axis=0)-np.min(CI,axis=0))[np.newaxis,:]
#CI=CI.max(axis=1).reshape(60,60,60)
ksyn=np.linspace(-0.3,2.3,60)
koff=np.linspace(-3,3,60)
kon=np.linspace(-3,3,60)
X,Y=np.meshgrid(kon,koff)

fig=plt.figure(figsize=(6,6),dpi=400)
gs0 = GridSpec(2,3)

temp=np.clip(np.log10(moments[:,0]).reshape(60,60,60),a_min=-2.5,a_max=2.5)
levels=np.linspace(-2.5,2.5,60)
divnorm=TwoSlopeNorm(vmin=-2.5, vcenter=0, vmax=2.5)
ax1 = fig.add_subplot(gs0[0,0],projection='3d')
ax1.contourf(X,Y,temp[15,:,:],zdir='z',offset=ksyn[15],cmap='RdBu_r',norm=divnorm,levels=levels)
ax1.contourf(X,Y,temp[30,:,:],zdir='z',offset=ksyn[30],cmap='RdBu_r',norm=divnorm,levels=levels)
surface=ax1.contourf(X,Y,temp[45,:,:],zdir='z',offset=ksyn[45],cmap='RdBu_r',norm=divnorm,levels=levels)
ax1.set_zlim(ksyn[15],ksyn[45])
ax1.set_zticks([0.3,1.0,1.5])
ax1.view_init(azim=250)
ticks=np.linspace(-2.5,2.5,5)
cbar=plt.colorbar(surface,ax=ax1,extend='both',ticks=ticks,orientation='horizontal',format=tkr.FormatStrFormatter('%.3g'))
#cbar.formatter.set_powerlimits((0,0))
ax1.set_title('log10(mean)',fontsize=10)
ax1.text2D(-0.1, 1.15, 'A', transform=ax1.transAxes, size=10, weight='bold')

temp=np.clip(np.log10(moments[:,1]).reshape(60,60,60),a_min=-6,a_max=4)
#temp=np.clip(moments[:,1].reshape(60,60,60),a_min=0,a_max=40)
levels=np.linspace(-6,4,60)
#levels=np.linspace(0,40,60)
divnorm=TwoSlopeNorm(vmin=-6, vcenter=0, vmax=4)
#divnorm=TwoSlopeNorm(vmin=0, vcenter=1, vmax=40)
ax1 = fig.add_subplot(gs0[0,1],projection='3d')
ax1.contourf(X,Y,temp[15,:,:],zdir='z',offset=ksyn[15],cmap='RdBu_r',norm=divnorm,levels=levels)
ax1.contourf(X,Y,temp[30,:,:],zdir='z',offset=ksyn[30],cmap='RdBu_r',norm=divnorm,levels=levels)
surface=ax1.contourf(X,Y,temp[45,:,:],zdir='z',offset=ksyn[45],cmap='RdBu_r',norm=divnorm,levels=levels)
ax1.set_zlim(ksyn[15],ksyn[45])
ax1.set_zticks([0.3,1.0,1.5])
ax1.view_init(azim=250)
ticks=np.linspace(-6,4,6)
#ticks=np.hstack(([0,1],np.linspace(0,40,5)[1:])).astype('int')
cbar=plt.colorbar(surface,ax=ax1,extend='both',ticks=ticks,orientation='horizontal')
#cbar.formatter.set_powerlimits((0,0))
ax1.set_title('log10(M2)',fontsize=10)
ax1.text2D(-0.1, 1.15, 'B', transform=ax1.transAxes, size=12, weight='bold')

temp=np.clip(np.log10(np.abs(moments[:,-1])).reshape(60,60,60),a_min=-6,a_max=6)
levels=np.linspace(-6,6,60)
divnorm=TwoSlopeNorm(vmin=-6, vcenter=0, vmax=6)
ax1 = fig.add_subplot(gs0[0,2],projection='3d')
ax1.contourf(X,Y,temp[15,:,:],zdir='z',offset=ksyn[15],cmap='RdBu_r',norm=divnorm,levels=levels)
ax1.contourf(X,Y,temp[30,:,:],zdir='z',offset=ksyn[30],cmap='RdBu_r',norm=divnorm,levels=levels)
surface=ax1.contourf(X,Y,temp[45,:,:],zdir='z',offset=ksyn[45],cmap='RdBu_r',norm=divnorm,levels=levels)
ax1.set_zlim(ksyn[15],ksyn[45])
ax1.set_zticks([0.3,1.0,1.5])
ax1.view_init(azim=250)
ticks=np.linspace(-6,6,7)
cbar=plt.colorbar(surface,ax=ax1,extend='both',ticks=ticks,orientation='horizontal')
#cbar.formatter.set_powerlimits((0,0))
ax1.set_title('||log10(M3)||',fontsize=10)
ax1.text2D(-0.1, 1.15, 'C', transform=ax1.transAxes, size=12, weight='bold')

temp=np.clip((moments[:,-1]/moments[:,0]).reshape(60,60,60),a_min=-40,a_max=40)
levels=np.linspace(temp[[15,30,45]].min(),60,60)
divnorm=TwoSlopeNorm(vmin=-40, vcenter=1, vmax=40)
ax1 = fig.add_subplot(gs0[1,1],projection='3d')
ax1.contourf(X,Y,temp[15,:,:],zdir='z',offset=ksyn[15],cmap='RdBu_r',norm=divnorm,levels=levels)
ax1.contourf(X,Y,temp[30,:,:],zdir='z',offset=ksyn[30],cmap='RdBu_r',norm=divnorm,levels=levels)
surface=ax1.contourf(X,Y,temp[45,:,:],zdir='z',offset=ksyn[45],cmap='RdBu_r',norm=divnorm,levels=levels)
ax1.set_zlim(ksyn[15],ksyn[45])
ax1.set_zticks([0.3,1.0,1.5])
ax1.view_init(azim=250)
ticks=np.hstack((np.linspace(-40,0,3)[:-1],np.linspace(0,40,3)[1:],[1]))
ticks=list(set(ticks))
ticks.sort()
cbar=plt.colorbar(surface,ax=ax1,extend='both',ticks=ticks,orientation='horizontal')
#cbar.formatter.set_powerlimits((0,0))
ax1.set_title(r'M3/$\mu$',fontsize=10)
ax1.text2D(-0.1, 1.15, 'E', transform=ax1.transAxes, size=12, weight='bold')

temp=np.clip((moments[:,-1]/moments[:,1]).reshape(60,60,60),a_min=-40,a_max=40)
levels=np.linspace(temp[[15,30,45]].min(),60,60)
divnorm=TwoSlopeNorm(vmin=-40, vcenter=1, vmax=40)
ax1 = fig.add_subplot(gs0[1,2],projection='3d')
ax1.contourf(X,Y,temp[15,:,:],zdir='z',offset=ksyn[15],cmap='RdBu_r',norm=divnorm,levels=levels)
ax1.contourf(X,Y,temp[30,:,:],zdir='z',offset=ksyn[30],cmap='RdBu_r',norm=divnorm,levels=levels)
surface=ax1.contourf(X,Y,temp[45,:,:],zdir='z',offset=ksyn[45],cmap='RdBu_r',norm=divnorm,levels=levels)
ax1.set_zlim(ksyn[15],ksyn[45])
ax1.set_zticks([0.3,1.0,1.5])
ax1.view_init(azim=250)
ticks=np.hstack((np.linspace(-40,0,3)[:-1],np.linspace(0,40,3)[1:],[1]))
ticks=list(set(ticks))
ticks.sort()
cbar=plt.colorbar(surface,ax=ax1,extend='both',ticks=ticks,orientation='horizontal')
#cbar.formatter.set_powerlimits((0,0))
ax1.set_title(r'M3/$\sigma^2$',fontsize=10)
ax1.text2D(-0.1, 1.15, 'F', transform=ax1.transAxes, size=12, weight='bold')

fano=np.clip((moments[:,1]/moments[:,0]).reshape(60,60,60),a_min=0.997, a_max=10)
divnorm=TwoSlopeNorm(vmin=0.997, vcenter=1, vmax=10)
levels=np.hstack((np.linspace(0.997,1,31),np.linspace(1,10,37)[1:]))
ax1=fig.add_subplot(gs0[1,0],projection='3d')
ax1.contourf(X,Y,fano[15,:,:],zdir='z',offset=ksyn[15],cmap='RdBu_r',norm=divnorm,levels=levels)
ax1.contourf(X,Y,fano[30,:,:],zdir='z',offset=ksyn[30],cmap='RdBu_r',norm=divnorm,levels=levels)
surface=ax1.contourf(X,Y,fano[45,:,:],zdir='z',offset=ksyn[45],cmap='RdBu_r',norm=divnorm,levels=levels)
ax1.set_zlim(ksyn[15],ksyn[45])
ax1.set_zticks([0.3,1.0,1.5])
ax1.view_init(azim=250)
ax1.set_title('Fano factor',fontsize=10)
ticks=np.hstack((np.linspace(0.997,1,2),np.linspace(0,10,3)[1:].astype('int')))
cbar=fig.colorbar(surface,ax=ax1,extend='both',ticks=ticks,format=tkr.FormatStrFormatter('%.3g'),orientation='horizontal')
ax1.text2D(-0.1, 1.15, 'D', transform=ax1.transAxes, size=12, weight='bold')
fig.tight_layout()
fig.savefig('supplement_statistics_measures')
print('done')